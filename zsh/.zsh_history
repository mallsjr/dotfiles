cd .config/
eza -l
cd nvim/
eza -l
bat init.lua 
cd lua/
eza -l
cd plugins/
eza -l
bat init.lua 
eza -l
cd ..
eza -l
cd michael/
eza -l
cd core/
eza -l
bat options.lua 
cd ..
cd ..
eza -l
cd configs/
eza -l
bat lspconfig.lua 
nvim lspconfig.lua
nvim lspconfig.lua
nvim main.lua
nvim lspconfig.lua
nvim .luarc
nvim main.lua
nvim lspconfig.lua
nvim main.lua
nvim lspconfig.lua
nvim main.lua
cd ..
cd ..
eza -l
cd ..
eza -l
tree nvim-old/
cd nvim-old/
eza -l
nvim init.lua 
cd lua/
eza -l
eza -l 
clear
cd ..
cd ..
eza -l
mv nvim/ nvim-chad
eza -l
mv nvim-old/ nvim
eza -l
clear
clear
nvim main.lua
cd nvim/
nvim init.lua 
clear
clear
nvim main.lua
eza -l
nvim init.lua 
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
nvim collision.lua
nvim main.lua 
love .
clear
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
clear
love .
nvim main.lua
cd ..
ls
mkdir clock
cd clock
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
love .
nvim main.lua
love .
love .
ls
nvim main.lua
nvim main.lua
nvim main.lua
nvim main.lua
nvim main.lua
nvim main.lua
nvim main.lua
ls
cd dev/love2d
ls
cd coin
ls
love .
ls
nvim main.lua
cd ..
gh repo clone mallsjr/workshop-love2d
ls
cd coin
ls
cd ..
cd workshop-love2d
ls
cp assets.zip ../coin
cd ..
cd coin
ls
nvim main.lua
clear
ls
love .
nvim main.lua
nvim main.lua
nvim main.lua
cd ~/.local
ls
cd share
ls
cd LuaAddons
ls
cd love2d
ls
cd library
ls
pwd
ls
nvim love.lua
cd ..
cd ..
cd ..
cd ..
cd ..
cd ..
ls
cd Downloads
ls
mv *.png ../dev/love2d/first-game
ls
cd ..
ls
cd first-game
git remote add origin https://github.com/mallsjr/first-game.git\
git branch -M main\
git push -u origin main
clear
cd ..
ls
cd coin
git init
git add .
git commit -m "coin game tutorial"
git remote add origin https://github.com/mallsjr/coin-pickup.git\
git branch -M main\
git push -u origin main
clear
cd
cd .config
ls
tree nvim
cf nvim
ls
cd nvim
ls
nvim init.lua
cd lua
ls
cd ..
cd ..
rm nvim
rm -rf nvim
clear
mkdir nvim
cd nvim
touch init.lua
mkdir lua
cd lua
mkdir config
cd config
touch lazy.lua
ls
nvim lazy.lua
cd ..
cd ..
nvim init.lua
cd lua
mkdir plugins
cd plugins
touch mini-statusline.lua
nvim mini-statusline.lua
nvim
nvim mini-statusline.lua
nvim mini-statusline.lua
nvim
clear
cd ..
cd plugins
nvim oil.lua
nvim oil.lua
cd ..
ls
cd config
ls
nvim keymaps.lua
nvim
ls
touch options.lua
nvim options.lua
ls
nvim options.lua
ls
brew install fzf
brew install ripgrep
which rg
clear
brew update
brew upgrade
brew install fd
which fd
clear
nvim fzflua.lua
nvim fzflua.lua
nvim fzflua.lua
nvim fzflua.lua
ls
cd ..
ls
cd plugins
ls
nvim fzflua.lua
ls
cd ..
ls
cd config
ls
nvim lazy.lua
cd ..
ls
cd ..
ls
nvim init.lua
nvim init.lua
nvim lua/plugins/fzflua.lua
nvim init.lua
erd .
brew install tree-sitter
ls
kickstarter.txt
nvim kickstarter.txt
ls
nvim
nvim lua/plugins/lsp.lua
nvim
nvim
nvim
nvim
nvim
nvim lua/plugins/lsp.lua
nvim lua/plugins/lsp.lua
clear
erd .
nvim lua/plugins/lsp.lua
nvim lua/plugins/lsp.lua
clear
erd .
nvim lua/plugins/blink-cmp.lua
nvim lua/plugins/blink-cmp.lua
nvim lua/plugins/blink-cmp.lua
nvim lua/plugins/blink-cmp.lua
nvim lua/plugins/blink-cmp.lua
nvim lua/plugins/lsp.lua
nvim lua/plugins/lsp.lua
nvim lua/plugins/lsp.lua
mkdir ~/.local/share/LuaAddons
cd ~/.local/share/LuaAddons
git clone https://github.com/LuaCATS/love2d.git
cd ~/.config/nvim
ls
nvim lua/plugins/lsp.lua
nvim lua/plugins/lsp.lua
nvim lua/plugins/lsp.lua
nvim lua/plugins/lsp.lua
nvim lua/plugins/lsp.lua
cd lua/plugins
ls
nvim love2d.lua
nvim love2d.lua
cd 
cd dev
ls
cd love2d
ls
cd clock
l
ls
nvim main.lua
nvim main.lua
nvim main.lua
nvim main.lua
clear
cd 
cd .config/nvim
ls
cd lua/plugins
ls
nvim love2d.lua
cd 
cd dev/love2d
ls
cd clock
ls
nvim main.lua
cd 
cd .config
cd nvim
cd lua/plugins
nvim love2d.lua
cd 
cd dev/love2d/clock
nvim main.lua
cd ..
ls
cd first-game
git status
git diff
git add .
git commit -m "init of target game"
clear
nvim main.lua
ls
git add .
git commit -m "add timer"
clear
ls
mkdir sprites
mv *.png sprites
ls
git add .
git commit -m "add sprites"
clear
nvim main.lua
git add .
git commit -m "adding in sprites and background"
clear
nvim main.lua
git add .
git commit -m "finishing touches"
clear
love .
nvim main.lua
love .
nvim main.lua
git status
git add .
git commit -m "coding challenge #1"
clear
nvim main.lua
git diff
git add .
git commit -m "coding challenge #2"
clear
lazygit
love . 
clear
nvim main.lua
clear
nvim main.lua
cd ..
mkdir topDownShooter
cd topDownShooter
nvim main.lua
ls
mv assets sprites/
ls
nvim main.lua
git status
git init
git add .
git commit -m "world setup and basic player movement"
clear
nvim main.lua
lazygit
clear
nvim main.lua
lazygit
clear
which spf
clear
git remote add origin https://github.com/mallsjr/top-down-shooter.git\
git branch -M main\
git push -u origin main
cd 
cd .config/nvim
erd .
nvim lua/plugins/fzflua.lua
nvim lua/plugins/lsp.lua
nvim lua/plugins/mini-comment.lua
nvim lua/plugins/mini-comment.lua
clear
erd .
nvim lua/plugins/treesitter.lua
nvim
nvim lua/plugins/conform.lua
nvim
nvim lua/plugins/conform.lua
brew install cmake ninja pkg-config skia libpng libjpeg
brew install cmake ninja pkg-config libpng libjpeg
brew info skia
brew uninstall cmake ninja pkg-config libpng libjpeg
brew install cmake ninja pkg-config libpng libjpeg
cd ..
cd ..
mkdir aseprite
cd aseprite
pwd
cd 
ls
ls -al
nvim .zshrc
sourcd .zshrc
source .zshrc
echo $ASEPRITE
cd $ASEPRITE
git clone --recursive https://github.com/aseprite/aseprite.git
mkdir build
ls
mkdir skia
ls
ls ./skia
cmake \       \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
    -DCMAKE_OSX_ARCHITECTURES=arm64 \\
    -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
    -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
    -DLAF_BACKEND=skia \\
    -DSKIA_DIR=$ASEPRITE_HOME/skia \\
    -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
    -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
    -DPNG_ARM_NEON:STRING=on \\
    -G Ninja \\
    ..
pwd
cd 
nvim .zshrc
echo $HOME
nvim .zshrc
source .zshrc
echo $ASEPRITE_HOME
cd dev/aseprite
ls
cmake \       \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
    -DCMAKE_OSX_ARCHITECTURES=arm64 \\
    -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
    -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
    -DLAF_BACKEND=skia \\
    -DSKIA_DIR=$ASEPRITE_HOME/skia \\
    -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
    -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
    -DPNG_ARM_NEON:STRING=on \\
    -G Ninja \\
    ..
cd ..
nvim .zshrc
cd 
nvim .zshrc
source .zshrc
echo $ASEPRITE_HOME
cmake \       \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
    -DCMAKE_OSX_ARCHITECTURES=arm64 \\
    -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
    -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
    -DLAF_BACKEND=skia \\
    -DSKIA_DIR=$ASEPRITE_HOME/skia \\
    -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
    -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
    -DPNG_ARM_NEON:STRING=on \\
    -G Ninja \\
    ..
source .zshrc
nvim .zshrc
echo $ASEPRITE_HOME
cd dev/aseprite
ls
cmake \       \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
    -DCMAKE_OSX_ARCHITECTURES=arm64 \\
    -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
    -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
    -DLAF_BACKEND=skia \\
    -DSKIA_DIR=$ASEPRITE_HOME/skia \\
    -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
    -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
    -DPNG_ARM_NEON:STRING=on \\
    -G Ninja \\
    ..
ls
cd ..
ls
mv aseprite Aseprite
cd Aseprite
cd 
nvim .zshrc
source .zshrc
echo $ASEPRITE_HOME
cd $ASEPRITE_HOME
cmake \       \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
    -DCMAKE_OSX_ARCHITECTURES=arm64 \\
    -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
    -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
    -DLAF_BACKEND=skia \\
    -DSKIA_DIR=$ASEPRITE_HOME/skia \\
    -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
    -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
    -DPNG_ARM_NEON:STRING=on \\
    -G Ninja \\
    ..
cd 
nvim .zshrc
source .zshrc
cd $ASEPRITE_HOME
cmake \       \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
    -DCMAKE_OSX_ARCHITECTURES=arm64 \\
    -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
    -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
    -DLAF_BACKEND=skia \\
    -DSKIA_DIR=$ASEPRITE_HOME/skia \\
    -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
    -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
    -DPNG_ARM_NEON:STRING=on \\
    -G Ninja \\
    ..
clear
echo "$ASEPRITE_HOME" | od -c\

cd 
ls
nvim .zshrc
source .zshrc
cd dev/Aseprite
cmake \       \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
    -DCMAKE_OSX_ARCHITECTURES=arm64 \\
    -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
    -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
    -DLAF_BACKEND=skia \\
    -DSKIA_DIR=$ASEPRITE_HOME/skia \\
    -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
    -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
    -DPNG_ARM_NEON:STRING=on \\
    -G Ninja \\
    ..
echo $ASEPRITE_HOME
clear
cmake \       \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
    -DCMAKE_OSX_ARCHITECTURES=arm64 \\
    -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
    -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
    -DLAF_BACKEND=skia \\
    -DSKIA_DIR=$ASEPRITE_HOME/skia \\
    -DSKIA_LIBRARY_DIR=/Users/michaelalls/dev/Aseprite/skia/out/Release-arm64 \\
    -DSKIA_LIBRARY=/Users/michaelalls/dev/Aseprite/skia/out/Release-arm64/libskia.a \\
    -DPNG_ARM_NEON:STRING=on \\
    -G Ninja \\
    ..
clear
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=$ASEPRITE_HOME/skia -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja ..\

echo $ASEPRITE_HOME
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=$ASEPRITE_HOME/aseprite/skia -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 -DSKIA_LIBRARY=$ASEPRITE_HOME/aseprite/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja ..\

cd aseprite
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=$ASEPRITE_HOME/skia -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja ..\

ls
cd cmake
ls
cd ..
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=$ASEPRITE_HOME/aseprite/skia -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 -DSKIA_LIBRARY=$ASEPRITE_HOME/aseprite/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja ..\

clear
python --version
python2 --version
which python
which python3
which python2
cd ..
cd ..
ls
rm -rf Aseprite
git clone --recursive https://github.com/aseprite/aseprite.git
cd ..
nvim .zshrc
source .zshrc
cd $ASEPRITE
cd ..
echo $ASEPRITE
echo $ASEPRITE_HOME
ssh michaelalls@raspberrypi.lan
cd 
nvim .zshrc
source .zshrc
ls
cd .config/nvim
ls
nvim
nvim
nvim
nvim
nvim
nvim
nvim
clear
exit
cd ..
cd ..
ls
cd node
ls
gh repo clone MagicMirrorOrg/MagicMirror
ls
cd MagicMirror
ls
nvim package.json
npm run server
npm install
npm version
clear
nvm --help
nvm versions
nvm version
npm version
npm -v
node -v
nvm version
npm install
nvm -h
nvm ls
clear
nvm ls-remote
nvim install --lts
nvm install --lts
nvm ls
npm install
clear
npm run server
spf
cp config/config.js.sample config/config.js
erd config
cd config
ls
erd config
cd ..
erd config
claer
clear
nvim config/config.js
npm run server
nvim config/config.js
npm run server
nvim config/config.js
npm run server
clear
nvim config/config.js
npm run server
clear
nvim config/config.js
clear
npm run server
nvim config/config.js
node -v
exit
echo $ASEPRITE
echo $ASEPRITE_HOME
cd $ASEPRITE_HOME
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=15.3.2 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=$ASEPRITE_HOME/skia -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja ..\

ls
mkdir build
cd build
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=15.3.2 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=$ASEPRITE_HOME/skia -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja ..\

clear
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
  -DCMAKE_OSX_ARCHITECTURES=arm64 \\
  -DCMAKE_OSX_DEPLOYMENT_TARGET=15.3.2 \\
  -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
  -DLAF_BACKEND=skia \\
  -DSKIA_DIR=$ASEPRITE_HOME/skia \\
  -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
  -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
  -DPNG_ARM_NEON:STRING=on \\
  -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \\
  -G Ninja \\
  ..\

ls
cd bin
ls
ls -al
cd ..
ls
cd bin
cd ..
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
  -DCMAKE_OSX_ARCHITECTURES=arm64 \\
  -DCMAKE_OSX_DEPLOYMENT_TARGET=15.3.2 \\
  -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
  -DLAF_BACKEND=skia \\
  -DSKIA_DIR=$ASEPRITE_HOME/skia \\
  -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
  -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
  -DPNG_ARM_NEON:STRING=on \\
  -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \\
  -G Ninja \\
  ..\

ls
cd bin
ls
cd ..
cmake \\
  -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
  -DCMAKE_OSX_ARCHITECTURES=arm64 \\
  -DCMAKE_OSX_DEPLOYMENT_TARGET=15.3.2 \\
  -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
  -DLAF_BACKEND=skia \\
  -DSKIA_DIR=$ASEPRITE_HOME/skia \\
  -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
  -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
  -DPNG_ARM_NEON:STRING=on \\
  -G Ninja \\
  ..\
ninja aseprite
cd ..
cd build
cmake \\
  -DCMAKE_BUILD_TYPE=RelWithDebInfo \\
  -DCMAKE_OSX_ARCHITECTURES=arm64 \\
  -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \\
  -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\
  -DLAF_BACKEND=skia \\
  -DSKIA_DIR=$ASEPRITE_HOME/skia \\
  -DSKIA_LIBRARY_DIR=$ASEPRITE_HOME/skia/out/Release-arm64 \\
  -DSKIA_LIBRARY=$ASEPRITE_HOME/skia/out/Release-arm64/libskia.a \\
  -DPNG_ARM_NEON:STRING=on \\
  -G Ninja \\
  ..\
ninja aseprite
ls
cd bin
ls
which ninja
ninja aseprite
./aseprite
./aseprite
clear
exit
cd ..
cd ..
cd ..
cd love2d
ls
cd topDownShooter
clear
lazygit
clear
nvim main.lua
nvim main.lua
lazygit
git push
clear
nvim main.lua
lazygit
bash -c "$(curl -sLo- https://superfile.netlify.app/install.sh)"
clear
spf
nvim main.lua
lazygit 
love .
clear
ls
nvim main.lua
lg
source ~/.zshrc
lg
nvim main.lua
lg
nvim main.lua
lg
nvim main.lua
lg
celar
clear
nvim main.lua
lg
which cask
brew --help
brew commands
brew install --help
which tldr
clear
nvim main.lua
lg
nvim main.lua
lg
clear
ls
nvim README.md
lg
nvim main.lua
clear
nvim main.lua
nvim main.lua
clear
nvim main.lua
love .
clear
nvim main.lua
lg
clear
which ping
ping raspberrypi.lan
clear
cd ..
ls
mkdir joystick-probe
cd joystick-probe
nvim main.lua
clear
cd ..
ls
mkdir platformer
cd platformer
clear
touch main.lua
gh repo clone a327ex/windfield
ls
mkdir libraries
mv windfield libraries
ls
erd .
clear
nvim main.lua
spf
clear
cd ..
ls
cd joystick-probe
nvim main.lua
cd ..
cd topDownShooter
nvim main.lua
clear
lg
nvim README.md
lg
clear
nvim main.lua
lg
clear
exit
cd ..
cd joystick-probe
nvim main.lua
clear
cd ..
ls
cd platformer
clear
ls
nvim main.lua
git init
git add .
git commit -m "init, collisions, movement"
clear
nvim main.lua
lg
git remote add origin https://github.com/mallsjr/platformer.git\
git branch -M main\
git push -u origin main
clear
ls
cd libraries
gh repo clone kikito/anim8
clear
cd ..
erd .
clear
nvim main.lua
ls
cd sprites
ls
pwd
cd ..
nvim main.lua
clear
lg
nvim main.lua
lg
clear
nvim main.lua
lg
clear
nvim main.lua
lg
clear
nvim main.lua
cd libraries
gh repo clone karai17/Simple-Tiled-Implementation
ls
cd ..
nvim main.lua
nvim main.lua
clear
ls
cd maps
ls
rm level1.lua
ls
ls
cd ..
love .
nvim ma
nvim main.lua
cd libraries
gh repo clone vrld/hump
cd ..
nvim main.lua
lg
clear
love .
nvim main.lua
clear
exit
cd 
cd .config/nvim
ls
nvim
cd ..
ls
cd 
cd Library
ls
cd 
cd Library
cd 'Application Scripts'
cd ..
cd 'Application Support'
ls
cd superfile
ls
nvim hotkeys.toml
cd 
spf
clear
cd dev
ls
cd love2d
ls
mkdir jazzys-garden
c jazzys-garden
cd jazzys-garden
touch main.lua
touch config.lua
ls
mkdir assets
love .
clear
git init
git add .
git commit -m "batman"
git remote add origin https://github.com/mallsjr/jazzys-garden.git\
git branch -M main\
git push -u origin main
clear
ls
mv config.lua conf.lua
git add .
git commit -m rename config.lua to conf.lua
git commit -m "rename config.lua to conf.lua"
git push
clear
nvim conf.lua
lazygit
lg
source ~/.zshrc
lg
clear
nvim main.lua
git add .
git commit -m "added main love game functions and printed hello to screen"
git push
clear
cd ..
cd platformer
clear
nvim main.lua
cd 
which zoxide
brew search zoxide
clear
cd .config/nvim
cler
clear
erd .
nvim 
clear
brew install zoxide
brew update
brew upgrade 
clear
cd ..
cd ..
nvim .zshrc
source .zshrc
clear
z .config/nvim
nvim
which fd
nvim
celar
clear
spf
which yazi
yazi
clear
nvim
nvim
brew install --cask qbittorrent
brew upgrade 
clear
cd ..
mkdir breathe
cd breathe
nvim main.lua
spf
lg
clear
z
clear
pw
pwd
clear
ll
la
ls
z Downloads
clear
ls
clear
z ../dev/love2d/platformer
spf
lg
erd maps
clear
z Downloads
pwd
z platformer
z Downloads
clear
ls
spf
spf
spf
erd .
clear
lg
lg
nvim main.lua
lg
clear
nvim main.lua
clear
lg
clear
nvim main.lua
lg
clear
nvim main.lua
clear
love .
clear
nvim main.lua
love .
nvim main.lua
love .
clear
nvim main.lua
lg
clear
nvim main.lua
lg
clear
nvim main.lua
clear
love .
cd dev/love2d/topDownShooter
clear
cd ..
cd topDownShooter
ls
nvim main.lua
cd ..
cd coin
nvim main.lua
clear
cd ..
ls
cd first-game
clear
erd .
nvim main.lua
cd ..
ls
nvim topDownShooter
clear
cd coin
clear
nvim main.lua
clear
exit
